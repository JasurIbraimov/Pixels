{"version":3,"sources":["components/Days/Days.module.css","components/Days/index.jsx","components/Calendar/index.jsx","components/Pallette/index.jsx","App.jsx","index.jsx","components/Calendar/Calendar.module.css","components/Pallette/Pallette.module.css","App.module.css"],"names":["module","exports","Days","bgColor","day","month","mood","onChangeDayStatus","status","onClick","fullDay","console","log","date","onSetPickedDay","className","styles","style","backgroundColor","Calendar","year","calendar","monthNameLayer","length","map","i","monthName","name","daysCountLayer","days","dayCount","monthLayer","index","pallette","label","Pallette","onMoodChange","title","pl","activeMood","Array","fill","months","mappedYear","finalYear","daysIndex","filter","findIndex","neededDays","slice","d","App","useState","setMood","setYear","app","header","content","pickedDay","prevYear","neededMonth","monthIndex","neededDay","dayIndex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f1fc4b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"day\":\"Days_day__1jyhD\"};","import React from 'react'\n\n// Styles\nimport styles from './Days.module.css'\nconst Days = ({\n\tday,\n\tmonth,\n\tmood,\n\tonChangeDayStatus,\n}) => {\n\tlet bgColor\n\tif (mood !== '') {\n\t\tbgColor =\n\t\tday.status === 'fun'\n\t\t\t\t? '#f1c40f'\n\t\t\t\t: day.status === 'active'\n\t\t\t\t? '#e74c3c'\n\t\t\t\t: day.status === 'lazy'\n\t\t\t\t? '#95a5a6'\n\t\t\t\t: day.status === 'stressed'\n\t\t\t\t? '#3498db'\n\t\t\t\t: day.status === 'calm'\n\t\t\t\t? '#27ae60'\n\t\t\t\t: ''\n\t} \n\tconst onSetPickedDay = (mood) => {\n\t\tif(day.fullDay) {\n\t\t\tconsole.log('jw')\n\t\t\tonChangeDayStatus({\n\t\t\t\tday: {\n\t\t\t\t\tdate: day.day,\n\t\t\t\t\tstatus: mood,\n\t\t\t\t\tfullDay: day.fullDay\n\t\t\t\t},\n\t\t\t\tmonth})\n\t\t}\n\t}\n\n\treturn (\n\t\t<li\n\t\t\tonClick={() => onSetPickedDay(mood)}\n\t\t\tclassName={styles.day}\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: day.fullDay ? bgColor : '#000'\n\t\t\t}}\n\t\t></li>\n\t)\n}\n\nexport default Days\n","// Base\nimport React from 'react'\n\n// Components\nimport Days from '../Days'\n// Styles\nimport styles from './Calendar.module.css'\nconst Calendar = ({ mood, year, onChangeDayStatus }) => {\n\treturn (\n\t\t<div className={styles.calendar}>\n\t\t\t<ul className={styles.monthNameLayer}>\n\t\t\t\t{year.length !== 0 && year.map((month, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className={styles.monthName}>\n\t\t\t\t\t\t\t{month.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t\t<ul className={styles.daysCountLayer}>\n\t\t\t\t{year.length !== 0 && year[0].days.map((day, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className={styles.dayCount}>\n\t\t\t\t\t\t\t{day.day}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\n\t\t\t<div className={styles.monthLayer}>\n\t\t\t\t{year.length !== 0 && year.map((month, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ul className={styles.month} key={index}>\n\t\t\t\t\t\t\t{year.length !== 0 && month.days.map((day, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Days\n\t\t\t\t\t\t\t\t\t\tonChangeDayStatus={onChangeDayStatus}\n\t\t\t\t\t\t\t\t\t\tday={day}\n\t\t\t\t\t\t\t\t\t\tmood={mood}\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tmonth={month.name}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Calendar\n","// Base\nimport React, {useState} from 'react'\n\n// Styles\nimport styles from './Pallette.module.css'\n\n// CONSTANTS\nconst pallette = [\n    {\n        status: 'fun',\n        label: [\n            'Fun', 'Happy'\n        ]\n    },\n    {\n        status: 'active',\n        label: [\n            'Active', 'Productive'\n        ]\n    },\n    {\n        status: 'lazy',\n        label: [\n            'Lazy', 'Procratinate'\n        ]\n    },\n    {\n        status: 'stressed',\n        label: [\n            'Stressed', 'Sad'\n        ]\n    },\n    {\n        status: 'calm',\n        label: [\n            'Calm', 'Zen'\n        ]\n    },\n    {\n        status: 'none',\n        label: [\n            'Eraze', 'A mood'\n        ]\n    }\n]\n\nconst Pallette = ({onMoodChange, mood}) => {\n    return (\n        <div className={styles.pallette}>\n            <h2 className={styles.title}>Color Code</h2>\n            <ul className={styles.mood}>\n                {\n                    pallette.map((pl, i) => {\n                        return <li key={i} className={mood === pl.status ? styles.activeMood : ''} onClick={() => onMoodChange(pl.status)}>\n                            <div className={styles[pl.status]}></div>\n                            <span>\n                                <p>{pl.label[0]}</p>\n                                <p>{pl.label[1]}</p>\n                            </span>\n                        </li>\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Pallette\n","// Base\nimport React, { useState, useEffect } from 'react'\n\n// Components\nimport Calendar from './components/Calendar'\nimport Pallete from './components/Pallette'\n// Styles\nimport styles from './App.module.css'\n// CONTANTS\nconst year = new Array(12).fill({})\nconst days = new Array(31).fill({})\nconst months = [\n\t'January',\n\t'February',\n\t'March',\n\t'April',\n\t'May',\n\t'June',\n\t'July',\n\t'August',\n\t'September',\n\t'October',\n\t'November',\n\t'December',\n]\nconst mappedYear = year.map((month, index) => {\n\treturn {\n\t\tname: months[index],\n\t\tdays: days.map((day, index) => {\n\t\t\treturn {\n\t\t\t\tday: index + 1,\n\t\t\t\tfullDay: true,\n\t\t\t\tstatus: 'none',\n\t\t\t} \n\t\t}) \n\t}\n})\n\nconst finalYear = mappedYear.map((month) => {\n\tconst daysIndex = mappedYear.filter(month => month.name === 'February')[0].days.findIndex(day => day.day > 28)\n\tconst neededDays =  mappedYear.filter(month => month.name === 'February')[0].days.filter(day => day.day > 28)\n\tif(month.name === 'February') {\n\t\treturn {\n\t\t\tname: month.name,\n\t\t\tdays: [\n\t\t\t\t...month.days.slice(0, daysIndex), \n\t\t\t\t...neededDays.map(d => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tday: d.day,\n\t\t\t\t\t\tstatus: d.status,\n\t\t\t\t\t\tfullDay: false\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t...month.days.slice(daysIndex + daysIndex, month.days.length), \n\t\t\t]\n\t\t}\n\t} else if (month.name === 'April' || month.name === 'June' || month.name === 'September' || month.name === 'November') {\n\t\treturn {\n\t\t\tname: month.name,\n\t\t\tdays: [\n\t\t\t\t...month.days.slice(0, month.days.length - 1), \n\t\t\t\tmonth.days[month.days.length] = {\n\t\t\t\t\tday: month.days[month.days.length - 1].day,\n\t\t\t\t\tstatus: month.days[month.days.length - 1].status,\n\t\t\t\t\tfullDay: false\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t} else {\n\t\treturn month \n\t}\n })\n\n\nconst App = () => {\n\tconst [mood, setMood] = useState('')\n\tconst [year, setYear] = useState(finalYear)\n\n\tconst onChangeDayStatus = (pickedDay) => {\n\t\tif (pickedDay) {\n\t\t\tsetYear((prevYear) => {\n\t\t\t\tconst neededMonth = prevYear.filter(\n\t\t\t\t\t(month) => month.name === pickedDay.month\n\t\t\t\t)\n\t\t\t\tconst monthIndex = prevYear.findIndex(\n\t\t\t\t\t(months) => months.name === pickedDay.month\n\t\t\t\t)\n\t\t\t\tconst neededDay = neededMonth[0].days.filter(\n\t\t\t\t\t(day) => day.day === pickedDay.day.date\n\t\t\t\t)\n\t\t\t\tconst dayIndex = neededMonth[0].days.findIndex(\n\t\t\t\t\t(days) => days.day === pickedDay.day.date\n\t\t\t\t)\n\t\t\t\tneededDay[0].status = pickedDay.day.status\n\t\t\t\treturn [\n\t\t\t\t\t...prevYear.slice(0, monthIndex),\n\t\t\t\t\t{\n\t\t\t\t\t\tname: neededMonth[0].name,\n\t\t\t\t\t\tdays: [\n\t\t\t\t\t\t\t...neededMonth[0].days.slice(0, dayIndex),\n\t\t\t\t\t\t\t...neededDay,\n\t\t\t\t\t\t\t...neededMonth[0].days.slice(\n\t\t\t\t\t\t\t\tdayIndex + 1,\n\t\t\t\t\t\t\t\tneededMonth[0].days.length\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t...prevYear.slice(monthIndex + 1, prevYear.length),\n\t\t\t\t]\n\t\t\t})\n\t\t}\n\t}\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<header className={styles.header}>\n\t\t\t\t<h1>2021</h1>\n\t\t\t\t<h2>Year in</h2>\n\t\t\t\t<span></span>\n\t\t\t</header>\n\t\t\t<div className={styles.content}>\n\t\t\t\t<Calendar\n\t\t\t\t\tonChangeDayStatus={onChangeDayStatus}\n\t\t\t\t\tmood={mood}\n\t\t\t\t\tyear={year}\n\t\t\t\t/>\n\t\t\t\t<div className={styles.mood}>\n\t\t\t\t\t<Pallete onMoodChange={setMood} mood={mood} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// Base\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n// Components\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Calendar_calendar__3ajIG\",\"monthNameLayer\":\"Calendar_monthNameLayer__1bZcu\",\"monthName\":\"Calendar_monthName__152jP\",\"daysCountLayer\":\"Calendar_daysCountLayer__2MExZ\",\"monthLayer\":\"Calendar_monthLayer__3tgAx\",\"month\":\"Calendar_month__1iEJK\",\"dayCount\":\"Calendar_dayCount__pV0tT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pallette\":\"Pallette_pallette__28WLB\",\"title\":\"Pallette_title__3bBjN\",\"fun\":\"Pallette_fun__-pNS2\",\"active\":\"Pallette_active__3VSQ_\",\"lazy\":\"Pallette_lazy__3U4EN\",\"stressed\":\"Pallette_stressed__Ku5K7\",\"calm\":\"Pallette_calm__2Im3o\",\"none\":\"Pallette_none__mX8la\",\"mood\":\"Pallette_mood__34tqf\",\"activeMood\":\"Pallette_activeMood__3QHKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"header\":\"App_header__3ZZ1n\",\"animate\":\"App_animate__2IQSP\",\"content\":\"App_content__3La4L\",\"mood\":\"App_mood__3Lh9C\"};"],"sourceRoot":""}